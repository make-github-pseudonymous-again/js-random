{
  "type": "File",
  "start": 0,
  "end": 925,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 25,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 925,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 25,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 49,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 49
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 7,
            "end": 17,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 17
              }
            },
            "local": {
              "type": "Identifier",
              "start": 7,
              "end": 17,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 7
                },
                "end": {
                  "line": 1,
                  "column": 17
                },
                "identifierName": "_randrange"
              },
              "name": "_randrange"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 23,
          "end": 48,
          "loc": {
            "start": {
              "line": 1,
              "column": 23
            },
            "end": {
              "line": 1,
              "column": 48
            }
          },
          "extra": {
            "rawValue": "../kernel/_randrange.js",
            "raw": "'../kernel/_randrange.js'"
          },
          "value": "../kernel/_randrange.js"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 50,
        "end": 85,
        "loc": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 35
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 57,
            "end": 64,
            "loc": {
              "start": {
                "line": 2,
                "column": 7
              },
              "end": {
                "line": 2,
                "column": 14
              }
            },
            "local": {
              "type": "Identifier",
              "start": 57,
              "end": 64,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 7
                },
                "end": {
                  "line": 2,
                  "column": 14
                },
                "identifierName": "randint"
              },
              "name": "randint"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 70,
          "end": 84,
          "loc": {
            "start": {
              "line": 2,
              "column": 20
            },
            "end": {
              "line": 2,
              "column": 34
            }
          },
          "extra": {
            "rawValue": "./randint.js",
            "raw": "'./randint.js'"
          },
          "value": "./randint.js"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Pick an element from range(start, stop, step) uniformly at random.\n *\n * Return an element from range(start, stop, step) selected uniformly at random.\n * If step is positive, this set corresponds to\n * {x: x in [start, stop[ AND x % step = 0}.\n * If step is negative, the range has to be given in reverse order, that is,\n * largest value first, smallest value second. Both the starting value and the\n * step value are optional. By default the starting value is <code>0</code>.\n * The default for the step value is <code>1</code>.\n *\n * TODO: Handle empty ranges.\n *\n * @function\n * @param {number} [start=0] - The starting value.\n * @param {number} stop - The stopping value.\n * @param {number} [step=1] - The step value.\n * @return {number} The picked element.\n ",
            "start": 87,
            "end": 859,
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 22,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "Identifier",
        "start": 860,
        "end": 898,
        "loc": {
          "start": {
            "line": 23,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 38
          }
        },
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 866,
            "end": 897,
            "loc": {
              "start": {
                "line": 23,
                "column": 6
              },
              "end": {
                "line": 23,
                "column": 37
              }
            },
            "id": {
              "type": "Identifier",
              "start": 866,
              "end": 875,
              "loc": {
                "start": {
                  "line": 23,
                  "column": 6
                },
                "end": {
                  "line": 23,
                  "column": 15
                },
                "identifierName": "randrange"
              },
              "name": "randrange",
              "leadingComments": null
            },
            "init": {
              "type": "CallExpression",
              "start": 878,
              "end": 897,
              "loc": {
                "start": {
                  "line": 23,
                  "column": 18
                },
                "end": {
                  "line": 23,
                  "column": 37
                }
              },
              "callee": {
                "type": "Identifier",
                "start": 878,
                "end": 888,
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 18
                  },
                  "end": {
                    "line": 23,
                    "column": 28
                  },
                  "identifierName": "_randrange"
                },
                "name": "_randrange"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "start": 889,
                  "end": 896,
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 29
                    },
                    "end": {
                      "line": 23,
                      "column": 36
                    },
                    "identifierName": "randint"
                  },
                  "name": "randint"
                }
              ]
            },
            "leadingComments": null
          }
        ],
        "kind": "const",
        "leadingComments": [],
        "name": "_",
        "trailingComments": []
      },
      {
        "type": "Identifier",
        "start": 899,
        "end": 924,
        "loc": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 25
          }
        },
        "declaration": {
          "type": "Identifier",
          "start": 914,
          "end": 923,
          "loc": {
            "start": {
              "line": 24,
              "column": 15
            },
            "end": {
              "line": 24,
              "column": 24
            },
            "identifierName": "randrange"
          },
          "name": "randrange"
        },
        "name": "_",
        "leadingComments": [],
        "trailingComments": []
      },
      {
        "type": "ExportDefaultDeclaration",
        "start": 899,
        "end": 924,
        "loc": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 25
          }
        },
        "declaration": {
          "type": "VariableDeclaration",
          "start": 860,
          "end": 898,
          "loc": {
            "start": {
              "line": 23,
              "column": 0
            },
            "end": {
              "line": 23,
              "column": 38
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 866,
              "end": 897,
              "loc": {
                "start": {
                  "line": 23,
                  "column": 6
                },
                "end": {
                  "line": 23,
                  "column": 37
                }
              },
              "id": {
                "type": "Identifier",
                "start": 866,
                "end": 875,
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 6
                  },
                  "end": {
                    "line": 23,
                    "column": 15
                  },
                  "identifierName": "randrange"
                },
                "name": "randrange",
                "leadingComments": null
              },
              "init": {
                "type": "CallExpression",
                "start": 878,
                "end": 897,
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 18
                  },
                  "end": {
                    "line": 23,
                    "column": 37
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 878,
                  "end": 888,
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 18
                    },
                    "end": {
                      "line": 23,
                      "column": 28
                    },
                    "identifierName": "_randrange"
                  },
                  "name": "_randrange"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 889,
                    "end": 896,
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 29
                      },
                      "end": {
                        "line": 23,
                        "column": 36
                      },
                      "identifierName": "randint"
                    },
                    "name": "randint"
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Pick an element from range(start, stop, step) uniformly at random.\n *\n * Return an element from range(start, stop, step) selected uniformly at random.\n * If step is positive, this set corresponds to\n * {x: x in [start, stop[ AND x % step = 0}.\n * If step is negative, the range has to be given in reverse order, that is,\n * largest value first, smallest value second. Both the starting value and the\n * step value are optional. By default the starting value is <code>0</code>.\n * The default for the step value is <code>1</code>.\n *\n * TODO: Handle empty ranges.\n *\n * @function\n * @param {number} [start=0] - The starting value.\n * @param {number} stop - The stopping value.\n * @param {number} [step=1] - The step value.\n * @return {number} The picked element.\n ",
              "start": 87,
              "end": 859,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 0
                },
                "end": {
                  "line": 22,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        }
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Pick an element from range(start, stop, step) uniformly at random.\n *\n * Return an element from range(start, stop, step) selected uniformly at random.\n * If step is positive, this set corresponds to\n * {x: x in [start, stop[ AND x % step = 0}.\n * If step is negative, the range has to be given in reverse order, that is,\n * largest value first, smallest value second. Both the starting value and the\n * step value are optional. By default the starting value is <code>0</code>.\n * The default for the step value is <code>1</code>.\n *\n * TODO: Handle empty ranges.\n *\n * @function\n * @param {number} [start=0] - The starting value.\n * @param {number} stop - The stopping value.\n * @param {number} [step=1] - The step value.\n * @return {number} The picked element.\n ",
      "start": 87,
      "end": 859,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "_randrange",
      "start": 7,
      "end": 17,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 18,
      "end": 22,
      "loc": {
        "start": {
          "line": 1,
          "column": 18
        },
        "end": {
          "line": 1,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "../kernel/_randrange.js",
      "start": 23,
      "end": 48,
      "loc": {
        "start": {
          "line": 1,
          "column": 23
        },
        "end": {
          "line": 1,
          "column": 48
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 48,
      "end": 49,
      "loc": {
        "start": {
          "line": 1,
          "column": 48
        },
        "end": {
          "line": 1,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 50,
      "end": 56,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "randint",
      "start": 57,
      "end": 64,
      "loc": {
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 2,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 65,
      "end": 69,
      "loc": {
        "start": {
          "line": 2,
          "column": 15
        },
        "end": {
          "line": 2,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./randint.js",
      "start": 70,
      "end": 84,
      "loc": {
        "start": {
          "line": 2,
          "column": 20
        },
        "end": {
          "line": 2,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 84,
      "end": 85,
      "loc": {
        "start": {
          "line": 2,
          "column": 34
        },
        "end": {
          "line": 2,
          "column": 35
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Pick an element from range(start, stop, step) uniformly at random.\n *\n * Return an element from range(start, stop, step) selected uniformly at random.\n * If step is positive, this set corresponds to\n * {x: x in [start, stop[ AND x % step = 0}.\n * If step is negative, the range has to be given in reverse order, that is,\n * largest value first, smallest value second. Both the starting value and the\n * step value are optional. By default the starting value is <code>0</code>.\n * The default for the step value is <code>1</code>.\n *\n * TODO: Handle empty ranges.\n *\n * @function\n * @param {number} [start=0] - The starting value.\n * @param {number} stop - The stopping value.\n * @param {number} [step=1] - The step value.\n * @return {number} The picked element.\n ",
      "start": 87,
      "end": 859,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 860,
      "end": 865,
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "randrange",
      "start": 866,
      "end": 875,
      "loc": {
        "start": {
          "line": 23,
          "column": 6
        },
        "end": {
          "line": 23,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 876,
      "end": 877,
      "loc": {
        "start": {
          "line": 23,
          "column": 16
        },
        "end": {
          "line": 23,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "_randrange",
      "start": 878,
      "end": 888,
      "loc": {
        "start": {
          "line": 23,
          "column": 18
        },
        "end": {
          "line": 23,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 888,
      "end": 889,
      "loc": {
        "start": {
          "line": 23,
          "column": 28
        },
        "end": {
          "line": 23,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "randint",
      "start": 889,
      "end": 896,
      "loc": {
        "start": {
          "line": 23,
          "column": 29
        },
        "end": {
          "line": 23,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 896,
      "end": 897,
      "loc": {
        "start": {
          "line": 23,
          "column": 36
        },
        "end": {
          "line": 23,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 897,
      "end": 898,
      "loc": {
        "start": {
          "line": 23,
          "column": 37
        },
        "end": {
          "line": 23,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 899,
      "end": 905,
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "default",
        "keyword": "default",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "default",
      "start": 906,
      "end": 913,
      "loc": {
        "start": {
          "line": 24,
          "column": 7
        },
        "end": {
          "line": 24,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "randrange",
      "start": 914,
      "end": 923,
      "loc": {
        "start": {
          "line": 24,
          "column": 15
        },
        "end": {
          "line": 24,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 923,
      "end": 924,
      "loc": {
        "start": {
          "line": 24,
          "column": 24
        },
        "end": {
          "line": 24,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 925,
      "end": 925,
      "loc": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 0
        }
      }
    }
  ]
}